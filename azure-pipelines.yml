# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- none

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:
- stage: Static_Code_Analysis
  displayName: Static Code Analysis
  jobs:
    - job: SAST
      steps:
      - task: SonarQubePrepare@5
        inputs:
            SonarQube: 'poc'
            scannerMode: 'CLI'
            configMode: 'manual'
            cliProjectKey: 'DAtaAppp'
            cliSources: '.'
      - task: SonarQubeAnalyze@5
      - task: SonarQubePublish@5
        inputs:
          pollingTimeoutSec: '300'
      # - task: SonarCloudPrepare@1
      #   inputs:
      #     SonarCloud: 'DotNetDemoPipeline'
      #     organization: 'demo-pipeline'
      #     scannerMode: 'CLI'
      #     configMode: 'manual'
      #     cliProjectKey: 'DevOpsXperts-POC_DotNetDemoPipeline'
      #     cliProjectName: 'DotNetDemoPipeline'
      #     cliSources: '.'

      # - task: SonarCloudAnalyze@1

      # - task: SonarCloudPublish@1
      #   inputs:
      #     pollingTimeoutSec: '300'
########################################################################################################################################
- stage: Build
  displayName: Project Build
  jobs:
    - job: Build_Project
      steps:
      - task: DotNetCoreCLI@2
        displayName: Restore
        inputs:
          command: 'restore'
          feedsToUse: 'select'

      - task: DotNetCoreCLI@2
        displayName: Build
        inputs:
          command: 'build'

      - task: DotNetCoreCLI@2
        displayName: Publish
        inputs:
          command: 'publish'
          publishWebProjects: true
          arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'

      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: '$(build.artifactStagingDirectory)'
          artifact: 'WebApp'
          publishLocation: 'pipeline'
##########################################################################################################################################
- stage: Unit_Test
  displayName: Running Unit Test
  jobs:
    - job: Unit_Test
      steps:
      - task: DotNetCoreCLI@2
        displayName: Test
        inputs:
          command: 'test'
          projects: '**/*[Tt]est*/*.csproj'
          publishTestResults: true
          arguments: '/p:CollectCoverage=true /p:CoverletOutputFormat=cobertura --collect "Code coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura --settings:coverage.runsettings'

      - task: PublishCodeCoverageResults@1
        inputs:
          codeCoverageTool: 'Cobertura'
          summaryFileLocation: '**/*cobertura.xml'
#############################################################################################################################################
- stage: Deploy_Stage
  displayName: Deploy Stage
  jobs:
  - job: Deploy
    displayName: Deploy to Web App
    steps:
    - checkout: none

    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'WebApp'
        targetPath: '$(Pipeline.Workspace)'

    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'Visual Studio Enterprise Subscription â€“ MPN(3)(748eb2de-6ec3-4af2-b4d0-ec909d1934e9)'
        appType: 'webApp'
        WebAppName: 'DOtNet12'
        packageForLinux: '$(Pipeline.Workspace)/**/*.zip'