# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- none

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:
- stage: Static_Code_Analysis
  displayName: Static Code Analysis
  jobs:
    - job: SAST
      steps:
      - task: SonarCloudPrepare@1
        inputs:
          SonarCloud: 'DotNetDemoPipeline'
          organization: 'demo-pipeline'
          scannerMode: 'CLI'
          configMode: 'manual'
          cliProjectKey: 'DevOpsXperts-POC_DotNetDemoPipeline'
          cliProjectName: 'DotNetDemoPipeline'
          cliSources: '.'
      - task: SonarCloudAnalyze@1
      - task: SonarCloudPublish@1
        inputs:
          pollingTimeoutSec: '300'
- stage: Build
  jobs:
    - job: Project_Build
      steps:
      # - task: SonarCloudPrepare@1
      #   inputs:
      #     SonarCloud: 'DotNetDemoPipeline'
      #     organization: 'demo-pipeline'
      #     scannerMode: 'MSBuild'
      #     projectKey: 'DevOpsXperts-POC_DotNetDemoPipeline'
      #     projectName: 'DotNetDemoPipeline'
      - task: DotNetCoreCLI@2
        inputs:
          command: 'build'
      
      # - task: SonarCloudAnalyze@1
      # - task: SonarCloudPublish@1
      #   inputs:
      #     pollingTimeoutSec: '300'
      - task: DotNetCoreCLI@2
        inputs:
          command: 'publish'
          publishWebProjects: true
          arguments: '-o $(build.artifactStagingDirectory)'
          zipAfterPublish: false
      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: $(build.artifactStagingDirectory)
          artifact: 'drop'
          publishLocation: 'pipeline'
      # - task: NDependTask@1
      #   inputs:
      #     BinariesOutput: '$(build.artifactStagingDirectory)'
      #   env:
      #     SYSTEM_ACCESSTOKEN: $(System.AccessToken)