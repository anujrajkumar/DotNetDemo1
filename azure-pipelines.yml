# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- none

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:
- stage: Static_Code_Analysis
  displayName: Static Code Analysis
  jobs:
    - job: SAST
      steps:
      - task: SonarCloudPrepare@1
        inputs:
          SonarCloud: 'DotNetDemoPipeline'
          organization: 'demo-pipeline'
          scannerMode: 'CLI'
          configMode: 'manual'
          cliProjectKey: 'DevOpsXperts-POC_DotNetDemoPipeline'
          cliProjectName: 'DotNetDemoPipeline'
          cliSources: '.'

      - task: SonarCloudAnalyze@1

      - task: SonarCloudPublish@1
        inputs:
          pollingTimeoutSec: '300'
########################################################################################################################################
- stage: Build
  displayName: Project Build
  jobs:
    - job: Build_Project
      steps:
      - task: DotNetCoreCLI@2
        displayName: Restore
        inputs:
          command: 'restore'
          feedsToUse: 'select'

      - task: DotNetCoreCLI@2
        displayName: Build
        inputs:
          command: 'build'

      - task: DotNetCoreCLI@2
        displayName: Publish
        inputs:
          command: 'publish'
          publishWebProjects: true
          arguments: '-o $(build.artifactStagingDirectory)'

      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'WebApp'
##########################################################################################################################################
- stage: Unit_Test
  displayName: Running Unit Test
  jobs:
    - job: Unit_Test
      steps:
      - task: DotNetCoreCLI@2
        displayName: Test
        inputs:
          command: 'test'
          projects: '**/*[Tt]est*/*.csproj'
          publishTestResults: true
          arguments: '/p:CollectCoverage=true /p:CoverletOutputFormat=cobertura --collect "Code coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura --settings:coverage.runsettings'

      - task: PublishCodeCoverageResults@1
        inputs:
          codeCoverageTool: 'Cobertura'
          summaryFileLocation: '**/*cobertura.xml'
#############################################################################################################################################
# - stage: Deploy_Stage
#   displayName: Deploy Stage
#   jobs:
#   - job: Deploy
#     displayName: Deploy to Web App
#     steps:
#     - checkout: none

#     - task: DownloadBuildArtifacts@1
#       inputs:
#         artifactName: 'drop'
#         downloadPath: '$(System.ArtifactsDirectory)'

#     - task: AzureRmWebAppDeployment@4
#       displayName: 'Azure App Service Deploy'
#       inputs:
#         azureSubscription: 'Microsoft Partner Network(10)(55cf0ba9-e3c1-4ced-b5e9-5abb7b4d39b1)'
#         WebAppName: 'app-services-pink-xxivks-xgtqkml3'
#         packageForLinux: '$(System.DefaultWorkingDirectory)/DotNetDemoPipeline/drop'